// Este arquivo é gerado automaticamente. Não edite manualmente.
// Use o script 'npm run <seu-script>' para atualizar.

import { z } from 'zod';

// --- Enums de ID ---
export const WeaponIdEnum = z.enum([
  'item-adaga',
  'item-alabarda',
  'item-arco-curto',
  'item-arco-longo',
  'item-azagaia',
  'item-besta-de-mao',
  'item-besta-leve',
  'item-besta-pesada',
  'item-bordao',
  'item-chicote',
  'item-cimitarra',
  'item-clava',
  'item-clava-grande',
  'item-dardo',
  'item-espada-curta',
  'item-espada-grande',
  'item-espada-longa',
  'item-estrela-da-manha',
  'item-foice-curta',
  'item-funda',
  'item-glaive',
  'item-lanca',
  'item-maca',
  'item-machadinha',
  'item-machado-de-batalha',
  'item-machado-grande',
  'item-malho',
  'item-mangual',
  'item-martelo-de-guerra',
  'item-martelo-leve',
  'item-mosquete',
  'item-picareta-de-guerra',
  'item-pique',
  'item-pistola',
  'item-rapieira',
  'item-tridente'
]);

export const ActionIdEnum = z.enum([
  'action-apply-poison',
  'action-attack',
  'action-cast-spell',
  'action-consume-item',
  'action-cover-lantern',
  'action-light-item',
  'action-move-summoned-token',
  'action-set-trap',
  'action-throw-item',
  'action-use-gear-area',
  'action-use-kit-charge'
]);

// --- Enums de Caminho de Propriedade ---
export const RootParameterPaths = z.enum([
  'activation.cost.amount',
  'activation.cost.resourceId',
  'activation.cost.source',
  'activation.type',
  'area.radius',
  'area.shape',
  'area.size',
  'area.unit',
  'attackType',
  'charges.max',
  'overrideAbilityScore',
  'range.normal',
  'range.unit',
  'save.ability',
  'save.dc',
  'save.dc.attributes',
  'save.dc.base',
  'save.ignoreCovers',
  'target.details',
  'target.quantity',
  'target.type'
]);

export const OutcomeParameterPaths = z.enum([
  'allowedSizes',
  'attribute',
  'condition',
  'details',
  'details.against',
  'details.duration.unit',
  'details.duration.value',
  'details.on',
  'direction',
  'distance.unit',
  'distance.value',
  'duration.isConcentration',
  'duration.unit',
  'duration.value',
  'effect',
  'effect.actionId',
  'effect.count',
  'effect.duration.isConcentration',
  'effect.duration.unit',
  'effect.duration.value',
  'effect.modifier.appliesTo',
  'effect.modifier.count',
  'effect.modifier.dice.count',
  'effect.modifier.dice.faces',
  'effect.modifier.faces',
  'effect.modifier.operation',
  'effect.modifier.target',
  'effect.on',
  'effect.parameters.activation.type',
  'effect.parameters.attackType',
  'effect.parameters.outcomes',
  'effect.parameters.overrideAbilityScore',
  'effect.parameters.range.normal',
  'effect.parameters.range.unit',
  'effect.parameters.target.quantity',
  'effect.parameters.target.type',
  'effect.properties.bright',
  'effect.properties.dim',
  'effect.properties.duration.unit',
  'effect.properties.duration.value',
  'effect.requiresChoice',
  'effect.scaling.rules',
  'effect.scaling.type',
  'effect.skill',
  'effect.trigger',
  'effect.type',
  'formula.addSpellcastingModifier',
  'formula.condition',
  'formula.damageTypeOptions',
  'formula.fixed',
  'formula.ifFalse.damageTypeOptions',
  'formula.ifFalse.roll.count',
  'formula.ifFalse.roll.faces',
  'formula.ifFalse.type',
  'formula.ifTrue.damageTypeOptions',
  'formula.ifTrue.roll.count',
  'formula.ifTrue.roll.faces',
  'formula.ifTrue.type',
  'formula.of',
  'formula.roll.count',
  'formula.roll.explodeLimit',
  'formula.roll.explodesOn',
  'formula.roll.faces',
  'formula.type',
  'id',
  'mechanic',
  'on',
  'operation',
  'properties.damageTypeOptions',
  'requirements.user',
  'token.effects',
  'token.name',
  'token.quantity',
  'type',
  'value',
  'vitals'
]);
